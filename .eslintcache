[{"/Users/vickyvasilopoulou/joblist/src/reportWebVitals.js":"1","/Users/vickyvasilopoulou/joblist/src/App.js":"2","/Users/vickyvasilopoulou/joblist/src/index.js":"3","/Users/vickyvasilopoulou/joblist/src/main/main.js":"4","/Users/vickyvasilopoulou/joblist/src/results/results.js":"5","/Users/vickyvasilopoulou/joblist/src/job/job.js":"6","/Users/vickyvasilopoulou/joblist/src/spinner/spinner.js":"7"},{"size":362,"mtime":1606740203825,"results":"8","hashOfConfig":"9"},{"size":923,"mtime":1607274905704,"results":"10","hashOfConfig":"9"},{"size":500,"mtime":1606740203824,"results":"11","hashOfConfig":"9"},{"size":3023,"mtime":1607275640433,"results":"12","hashOfConfig":"9"},{"size":2586,"mtime":1607274896091,"results":"13","hashOfConfig":"9"},{"size":3375,"mtime":1607274876328,"results":"14","hashOfConfig":"9"},{"size":591,"mtime":1606845823728,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"d3c131",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"/Users/vickyvasilopoulou/joblist/src/reportWebVitals.js",[],["35","36"],"/Users/vickyvasilopoulou/joblist/src/App.js",[],["37","38"],"/Users/vickyvasilopoulou/joblist/src/index.js",[],["39","40"],"/Users/vickyvasilopoulou/joblist/src/main/main.js",["41","42"],"import React, { useState, useEffect } from \"react\";\nimport Results from \"../results/results\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid } from \"@material-ui/core\";\nimport Spinner from \"../spinner/spinner\";\n\n\n\n//API: https://jobs.github.com/positions.json?location=london\n//API: https://jobs.github.com/positions.json?description=python\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        margin: \"20px auto\",\n        borderRadius: \"5px\"\n    },\n    select: {\n        backgroundColor: \"#B4F8C8\",\n        padding: \"15px\",\n        color: \"#444242\",\n        fontSize: \"1rem\",\n        borderRadius: \"10px\",\n        border: \"1px #B4F8C8\"\n    },\n    spinner: {\n        justifyContent: \"center\"\n    }\n}));\n\nexport default function Main() {\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [listofJobs, setListofJobs] = useState([]);\n    const [location, setLocation] = useState(\"\");\n    const [page, setPage] = useState(1);\n    const URL = \"https://jobs.github.com/positions.json\";\n    const classes = useStyles();\n\n\n    useEffect(() => {\n        fetch(URL)\n            .then((response) => response.json())\n            .then((json) => {\n                setListofJobs(json);\n                setIsLoaded(true);\n\n            });\n    }, []);\n\n    if (!isLoaded) {\n        return (\n            <Grid container className={classes.spinner}>\n                <Spinner />\n            </Grid>\n        );\n    } else {\n        //remove duplicate locations\n        const removeDuplicates = Array.from(new Set(listofJobs.map(a => a.location)))\n            .map(location => {\n                return listofJobs.find(a => a.location === location)\n            })\n        return (\n            <>\n                <Grid container className={classes.container}>\n                    <form className={classes.form}>\n                        <select\n                            onChange={(e) => setLocation(e.target.value)}\n                            className={classes.select} defaultValue=\"Choose location\">\n                            <option enabled='true'>\n                                Location\n                            </option>\n\n                            {\n                                removeDuplicates\n                                    .sort((a, b) => a.location > b.location ? 1 : - 1)\n                                    .map(({ location, id }) => {\n                                        return (\n                                            <option\n                                                key={id}\n                                                value={location}>\n                                                {location}\n                                            </option>\n                                        )\n                                    })\n                            }\n                        </select>\n                    </form>\n                </Grid>\n                {location && <Results location={location} />}\n            </>\n        );\n    }\n}","/Users/vickyvasilopoulou/joblist/src/results/results.js",[],"/Users/vickyvasilopoulou/joblist/src/job/job.js",[],"/Users/vickyvasilopoulou/joblist/src/spinner/spinner.js",["43"],"import React, { useState } from \"react\";\nimport FadeLoader from \"react-spinners/FadeLoader\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n  override: {\n    display: \"block\",\n    margin: \"0 auto\",\n    borderColor: \"red\"\n  }\n}));\nexport default function Spinner() {\n  const[enabled, setEnabled] = useState(true)\n  const classes = useStyles();\n\n  return (\n    <div className=\"sweet-loading\">\n      <FadeLoader\n        className={classes.override}\n        size={150}\n        color={\"#00FA9A\"}\n        loading={enabled}\n      />\n    </div>\n  );\n}\n",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"44","replacedBy":"48"},{"ruleId":"46","replacedBy":"49"},{"ruleId":"44","replacedBy":"50"},{"ruleId":"46","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":36,"column":12,"nodeType":"54","messageId":"55","endLine":36,"endColumn":16},{"ruleId":"52","severity":1,"message":"56","line":36,"column":18,"nodeType":"54","messageId":"55","endLine":36,"endColumn":25},{"ruleId":"52","severity":1,"message":"57","line":13,"column":18,"nodeType":"54","messageId":"55","endLine":13,"endColumn":28},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],["58"],["59"],["58"],["59"],"no-unused-vars","'page' is assigned a value but never used.","Identifier","unusedVar","'setPage' is assigned a value but never used.","'setEnabled' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]